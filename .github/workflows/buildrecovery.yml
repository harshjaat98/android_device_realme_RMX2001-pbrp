name: PBRP Organization CI
on:
  workflow_dispatch:
    inputs:
      DEPLOY_TYPE:
        description: 'Deploy Type (TEST/BETA/OFFICIAL)'
        required: true
        default: 'TEST'
      ChangeLogs:
        description: 'Build ChangeLogs'
        required: true
        default: 'Sync Latest Source'

env:
  BUILD_RELEASE_TYPE: ${{ github.event.inputs.DEPLOY_TYPE }}
  CHANGELOG: ${{ github.event.inputs.ChangeLogs }}
  BOT_API: ${{ secrets.BOT_API }}
  GCF_AUTH_KEY: ${{ secrets.GCF_AUTH_KEY }}
  GH_BOT_TOKEN: ${{ secrets.GH_BOT_TOKEN }}
  GitHubMail: ${{ secrets.GitHubMail }}
  GitHubName: ${{ secrets.GitHubName }}
  SFPassword: ${{ secrets.SFPassword }}
  SFUserName: ${{ secrets.SFUserName }}
  TARGET: "pbrp"
  EXTRA_CMD: |
    if [ -d device/realme/RMX2001 ]; then
      echo "Adapting RM6785 tree for RMX2001"
      sed -i 's/RM6785/RMX2001/g' device/realme/RMX2001/*.mk
      mv -v device/realme/RMX2001/omni_{RM6785,RMX2001}.mk
      sed -i 's/102760448/67108864/' device/realme/RMX2001/BoardConfig.mk
    fi

jobs:
  PBRP_CI:
    if: "(! contains(toJSON(github.event.commits.*.message), '[skip-ci]'))"
    runs-on: ubuntu-20.04

    steps:
       - name: Auto Adapt Manifest
         # /* if your branch name is other than the one which you dispatched workflow from then set it manually in the place of ${GITHUB_REF##*/}" */ 
         run: echo "MANIFEST=https://github.com/PitchBlackRecoveryProject/manifest_pb -b ${GITHUB_REF##*/}" >> $GITHUB_ENV

       - name: Export Vars
         run: |
              if [[ ${BUILD_RELEASE_TYPE} == "TEST" ]]; then echo "TEST_BUILD=true"  >> $GITHUB_ENV;fi
              if [[ ${BUILD_RELEASE_TYPE} == "BETA" ]]; then echo "BETA_BUILD=true"  >> $GITHUB_ENV;fi
              if [[ ${BUILD_RELEASE_TYPE} == "OFFICIAL" ]]; then echo "PB_OFFICIAL=true"  >> $GITHUB_ENV;fi

       - name: RM6785 Setup
         run: |
           if [[ ${GITHUB_ACTION_REPOSITORY} == "PitchBlackRecoveryProject/android_device_realme_RMX2001-pbrp" ]]; then echo "RMX2001_BUILD=true" >>$GITHUB_ENV;fi

       - name: Checkout Cleaning Up Runner Repo
         uses: actions/checkout@v2
         with:
           repository: PitchBlackRecoveryProject/Cleaner
           ref: main
           token: ${{ secrets.GH_BOT_TOKEN }}
           path: .github/actions/Cleaner
       - name: Cleaning
         uses: ./.github/actions/Cleaner

       - name: Checkout Recovery Compiler Repo
         uses: actions/checkout@v2
         with:
           repository: PitchBlackRecoveryProject/Compiler
           ref: production
           token: ${{ secrets.GH_BOT_TOKEN }}
           path: .github/actions/Compiler
       - name: Recovery Compilation
         uses: ./.github/actions/Compiler
       
       - name: Release Builds 
         run: |
              sudo apt-get update && sudo apt-get install sshpass -y
              cd $BuildPath 
              bash vendor/utils/pb_deploy.sh ${BUILD_RELEASE_TYPE} ${VENDOR} ${CODENAME}
